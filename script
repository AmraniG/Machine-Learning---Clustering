import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans

#Loading digits dataset and printing the description
digits = datasets.load_digits()
#print(digits.DESCR)

#Looking what the data looks like
sample = digits.data
#print(sample)

#Looking at the target values
validation = digits.target
#print(validation)

#Finding the best number of clusters 
num_clusters = [x for x in range(1,15)]
inertias = []
for i in num_clusters:
 model = KMeans(n_clusters = i)
 model.fit(sample)
 k = model.inertia_
 inertias.append(k)

plt.plot(num_clusters, inertias, 'o')
plt.xlabel('number of clusters (k)')
plt.ylabel('inertia')
plt.show()

#best k is 10 according to the plot
model = KMeans(n_clusters = 9)
model.fit(sample)


labels = model.predict(sample)


new_samples = np.array([
[0.00,0.00,0.00,2.60,5.87,0.54,0.00,0.00,0.00,0.00,0.00,2.74,7.62,3.81,0.00,0.00,0.00,0.00,0.00,0.00,5.34,6.87,0.00,0.00,0.00,0.00,0.00,0.00,3.05,7.63,1.30,0.00,0.00,0.00,0.00,0.00,1.53,7.62,2.29,0.00,0.00,0.00,0.00,0.00,0.84,7.62,3.28,0.00,0.00,0.00,0.00,0.00,0.00,7.17,3.21,0.00,0.00,0.00,0.00,0.00,0.00,0.46,0.08,0.00],
[0.00,0.00,4.73,6.86,6.86,4.50,0.08,0.00,0.00,0.00,2.29,3.81,4.96,7.62,2.52,0.00,0.00,0.00,0.00,0.46,5.87,7.62,2.59,0.00,0.00,0.00,0.00,1.37,6.79,7.55,5.26,0.00,0.00,0.00,0.00,0.00,0.00,3.74,7.62,1.53,0.00,0.00,1.52,5.03,2.67,5.19,7.62,2.06,0.00,0.00,1.53,7.32,7.62,7.24,4.27,0.08,0.00,0.00,0.00,0.46,0.76,0.38,0.00,0.00],
[0.00,0.00,3.05,2.13,0.00,0.00,0.00,0.00,0.00,0.00,6.56,6.71,0.00,0.00,3.05,1.07,0.00,0.00,4.12,7.47,0.00,0.00,7.55,5.49,0.00,0.00,3.51,7.63,0.45,0.00,6.02,7.55,0.00,0.00,2.44,7.62,4.19,4.04,6.94,7.62,0.00,0.00,0.46,6.56,7.62,7.47,5.64,7.62,0.00,0.00,0.00,0.00,0.00,0.00,0.61,7.62,0.00,0.00,0.00,0.00,0.00,0.00,0.46,7.63],
[0.00,0.00,2.21,3.66,4.73,5.79,4.58,0.00,0.00,0.00,7.09,7.47,6.71,6.71,6.86,0.00,0.00,0.00,0.46,0.08,0.00,4.65,6.86,0.00,0.00,0.00,0.00,0.00,0.00,6.33,5.72,0.00,0.00,0.00,0.00,0.00,0.38,7.62,3.66,0.00,0.00,0.00,0.00,0.00,1.53,7.62,2.45,0.00,0.00,0.00,0.00,0.00,0.53,5.03,0.77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00]
]
)

new_labels = model.predict(new_samples)
print(new_labels)
